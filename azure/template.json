{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceEnvironmentName": {
      "type": "string"
    },
    "serviceName": {
      "type": "string"
    },
    "appServiceAllowedIPs": {
      "type": "array",
      "defaultValue": []
    },
    "environmentName": {
      "type": "string"
    },
    "sharedSqlServerName": {
      "type": "string"
    },
    "sharedServiceBusName": {
      "type": "string"
    },
    "sharedResourceGroup": {
      "type": "string"
    },
    "configurationStorageConnectionString": {
      "type": "securestring"
    },
    "configNames": {
      "type": "string",
      "defaultValue": "SFA.DAS.Reservations.Api"
    },
    "version": {
      "type": "string",
      "defaultValue": "1.0"
    },
    "databaseSkuName": {
      "type": "string",
      "defaultValue": "S0"
    },
    "databaseTier": {
      "type": "string",
      "defaultValue": "Standard"
    },
    "logAnalyticsSubscriptionId": {
      "type": "string",
      "defaultValue": "[subscription().subscriptionId]"
    },
    "logAnalyticsResourceGroup": {
      "type": "string"
    },
    "logAnalyticsWorkspaceName": {
      "type": "string"
    },
    "customHostname": {
      "type": "string"
    },
    "certificateName": {
      "type": "string"
    },
    "keyVaultName": {
      "type": "string"
    },
    "keyVaultResourceGroup": {
      "type": "string"
    },
    "loggingRedisConnectionString": {
      "type": "securestring"
    }
  },
  "variables": {
    "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/das-platform-building-blocks/role-assignment/templates/",
    "resourceNamePrefix": "[toLower(concat('das-', parameters('resourceEnvironmentName'),'-', parameters('serviceName')))]",
    "appServiceName": "[concat(variables('resourceNamePrefix'), 'api-as')]",
    "appServicePlanName": "[concat(variables('resourceNamePrefix'), 'api-asp')]",
    "databaseName": "[concat(variables('resourceNamePrefix'), '-db')]"
  },
  "resources": [
    {
      "apiVersion": "2017-05-10",
      "name": "app-service-plan",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-plan.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServicePlanName": {
            "value": "[variables('appServicePlanName')]"
          },
          "aspSize": {
            "value": "1"
          },
          "aspInstances": {
            "value": 2
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "app-service-certificate",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-certificate.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultCertificateName": {
            "value": "[parameters('certificateName')]"
          },
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('keyVaultResourceGroup')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "application-insights",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[variables('appServiceName')]"
          },
          "attachedService": {
            "value": "[variables('appServiceName')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "app-service",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[variables('appServiceName')]"
          },
          "appServicePlanName": {
            "value": "[variables('appServicePlanName')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[resourceGroup().name]"
          },
          "appServiceAppSettings": {
            "value": [
              {
                "name": "Environment",
                "value": "[parameters('environmentName')]"
              },
              {
                "name": "ConfigurationStorageConnectionString",
                "value": "[parameters('configurationStorageConnectionString')]"
              },
              {
                "name": "ConfigNames",
                "value": "[parameters('configNames')]"
              },
              {
                "name": "Version",
                "value": "[parameters('version')]"
              },
              {
                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                "value": "[reference('application-insights').outputs.InstrumentationKey.value]"
              },
              {
                "name": "ASPNETCORE_ENVIRONMENT",
                "value": "[toUpper(parameters('environmentName'))]"
              },
              {
                "name": "LoggingRedisConnectionString",
                "value": "[parameters('loggingRedisConnectionString')]"
              }
            ]
          },
          "customHostName": {
            "value": "[parameters('customHostname')]"
          },
          "certificateThumbprint": {
            "value": "[reference('app-service-certificate').outputs.certificateThumbprint.value]"
          },
          "ipSecurityRestrictions": {
            "value": "[parameters('appServiceAllowedIPs')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "sql-database",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('sharedResourceGroup')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'sql-database.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "databaseName": {
            "value": "[variables('databaseName')]"
          },
          "sqlServerName": {
            "value": "[parameters('sharedSqlServerName')]"
          },
          "databaseSkuName": {
            "value": "[parameters('databaseSkuName')]"
          },
          "databaseTier": {
            "value": "[parameters('databaseTier')]"
          },
          "logAnalyticsSubscriptionId": {
            "value": "[parameters('logAnalyticsSubscriptionId')]"
          },
          "logAnalyticsResourceGroup": {
            "value": "[parameters('logAnalyticsResourceGroup')]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[parameters('logAnalyticsWorkspaceName')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "[concat('role-assignments-', copyIndex())]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('sharedResourceGroup')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'role-assignment.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "principalId": {
            "value": "[createArray(reference('app-service').outputs.managedServiceIdentityId.value, reference('app-service').outputs.stagingManagedServiceIdentityId.value)[copyIndex()]]"
          },
          "assignmentType": {
            "value": "ServiceBusOwner"
          },
          "resourceName": {
            "value": "[parameters('sharedServiceBusName')]"
          }
        }
      },
      "copy": {
        "name": "role-assignments",
        "count": 2
      }
    }
  ],
  "outputs": {
    "databaseName": {
      "type": "string",
      "value": "[variables('databaseName')]"
    },
    "appServiceName": {
      "type": "string",
      "value": "[variables('appServiceName')]"
    }
  }
}